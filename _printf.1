.TH _PRINTF 3 "March 2025" "1.0" "Custom Printf Manual"

.SH NAME
_printf \- Custom implementation of the printf function.

.SH SYNOPSIS
.B #include "main.h"
.br
.BI "int _printf(const char *format, ...);"

.SH DESCRIPTION
.B _printf
is a custom implementation of the standard printf function. It formats and prints data to the standard output.

This function supports the following format specifiers:

.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string.
.TP
.B %d, %i
Prints a signed integer in decimal notation.
.TP
.B %%
Prints a literal percent sign.

Unrecognized format specifiers are printed as "%" followed by the unknown character.

.SH RETURN VALUE
.B _printf
returns the total number of characters printed (excluding the null byte used to end output to strings). If an error occurs, it returns -1.

.SH EXAMPLES
.B Example usage:
.nf
#include "main.h"

int main(void)
{
    _printf("Hello, %s! You scored %d%%.\n", "world", 100);
    return (0);
}
.fi

Expected output:
.nf
Hello, world! You scored 100%.
.fi

.SH NOTES
- This implementation does not support floating-point numbers or additional format specifiers such as %u, %o, %x, or %p.
- Handling of unknown format specifiers differs from the standard printf: instead of undefined behavior, it prints "%" followed by the character.

.SH SEE ALSO
.BR printf (3)

.SH BUGS
This implementation does not handle buffer overflow protection like the standard printf.

.SH AUTHORS
Olivia, Williams, Maxime


